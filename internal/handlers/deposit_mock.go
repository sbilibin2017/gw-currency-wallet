// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Github/gw-currency-wallet/internal/handlers/deposit.go

// Package handlers is a generated GoMock package.
package handlers

import (
	context "context"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	jwt "github.com/sbilibin2017/gw-currency-wallet/internal/jwt"
)

// MockDepositTokener is a mock of DepositTokener interface.
type MockDepositTokener struct {
	ctrl     *gomock.Controller
	recorder *MockDepositTokenerMockRecorder
}

// MockDepositTokenerMockRecorder is the mock recorder for MockDepositTokener.
type MockDepositTokenerMockRecorder struct {
	mock *MockDepositTokener
}

// NewMockDepositTokener creates a new mock instance.
func NewMockDepositTokener(ctrl *gomock.Controller) *MockDepositTokener {
	mock := &MockDepositTokener{ctrl: ctrl}
	mock.recorder = &MockDepositTokenerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDepositTokener) EXPECT() *MockDepositTokenerMockRecorder {
	return m.recorder
}

// GetClaims mocks base method.
func (m *MockDepositTokener) GetClaims(ctx context.Context, tokenString string) (*jwt.Claims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClaims", ctx, tokenString)
	ret0, _ := ret[0].(*jwt.Claims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClaims indicates an expected call of GetClaims.
func (mr *MockDepositTokenerMockRecorder) GetClaims(ctx, tokenString interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClaims", reflect.TypeOf((*MockDepositTokener)(nil).GetClaims), ctx, tokenString)
}

// GetTokenFromRequest mocks base method.
func (m *MockDepositTokener) GetTokenFromRequest(ctx context.Context, r *http.Request) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenFromRequest", ctx, r)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTokenFromRequest indicates an expected call of GetTokenFromRequest.
func (mr *MockDepositTokenerMockRecorder) GetTokenFromRequest(ctx, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenFromRequest", reflect.TypeOf((*MockDepositTokener)(nil).GetTokenFromRequest), ctx, r)
}

// MockWalletDepositWriter is a mock of WalletDepositWriter interface.
type MockWalletDepositWriter struct {
	ctrl     *gomock.Controller
	recorder *MockWalletDepositWriterMockRecorder
}

// MockWalletDepositWriterMockRecorder is the mock recorder for MockWalletDepositWriter.
type MockWalletDepositWriterMockRecorder struct {
	mock *MockWalletDepositWriter
}

// NewMockWalletDepositWriter creates a new mock instance.
func NewMockWalletDepositWriter(ctrl *gomock.Controller) *MockWalletDepositWriter {
	mock := &MockWalletDepositWriter{ctrl: ctrl}
	mock.recorder = &MockWalletDepositWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWalletDepositWriter) EXPECT() *MockWalletDepositWriterMockRecorder {
	return m.recorder
}

// SaveDeposit mocks base method.
func (m *MockWalletDepositWriter) SaveDeposit(ctx context.Context, userID uuid.UUID, amount float64, currency string) (map[string]float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveDeposit", ctx, userID, amount, currency)
	ret0, _ := ret[0].(map[string]float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveDeposit indicates an expected call of SaveDeposit.
func (mr *MockWalletDepositWriterMockRecorder) SaveDeposit(ctx, userID, amount, currency interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveDeposit", reflect.TypeOf((*MockWalletDepositWriter)(nil).SaveDeposit), ctx, userID, amount, currency)
}
