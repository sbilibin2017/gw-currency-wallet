// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Github/gw-currency-wallet/internal/handlers/balance.go

// Package handlers is a generated GoMock package.
package handlers

import (
	context "context"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	jwt "github.com/sbilibin2017/gw-currency-wallet/internal/jwt"
)

// MockBalanceTokener is a mock of BalanceTokener interface.
type MockBalanceTokener struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceTokenerMockRecorder
}

// MockBalanceTokenerMockRecorder is the mock recorder for MockBalanceTokener.
type MockBalanceTokenerMockRecorder struct {
	mock *MockBalanceTokener
}

// NewMockBalanceTokener creates a new mock instance.
func NewMockBalanceTokener(ctrl *gomock.Controller) *MockBalanceTokener {
	mock := &MockBalanceTokener{ctrl: ctrl}
	mock.recorder = &MockBalanceTokenerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceTokener) EXPECT() *MockBalanceTokenerMockRecorder {
	return m.recorder
}

// GetClaims mocks base method.
func (m *MockBalanceTokener) GetClaims(ctx context.Context, tokenString string) (*jwt.Claims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClaims", ctx, tokenString)
	ret0, _ := ret[0].(*jwt.Claims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClaims indicates an expected call of GetClaims.
func (mr *MockBalanceTokenerMockRecorder) GetClaims(ctx, tokenString interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClaims", reflect.TypeOf((*MockBalanceTokener)(nil).GetClaims), ctx, tokenString)
}

// GetTokenFromRequest mocks base method.
func (m *MockBalanceTokener) GetTokenFromRequest(ctx context.Context, r *http.Request) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenFromRequest", ctx, r)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTokenFromRequest indicates an expected call of GetTokenFromRequest.
func (mr *MockBalanceTokenerMockRecorder) GetTokenFromRequest(ctx, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenFromRequest", reflect.TypeOf((*MockBalanceTokener)(nil).GetTokenFromRequest), ctx, r)
}

// MockBalancer is a mock of Balancer interface.
type MockBalancer struct {
	ctrl     *gomock.Controller
	recorder *MockBalancerMockRecorder
}

// MockBalancerMockRecorder is the mock recorder for MockBalancer.
type MockBalancerMockRecorder struct {
	mock *MockBalancer
}

// NewMockBalancer creates a new mock instance.
func NewMockBalancer(ctrl *gomock.Controller) *MockBalancer {
	mock := &MockBalancer{ctrl: ctrl}
	mock.recorder = &MockBalancerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalancer) EXPECT() *MockBalancerMockRecorder {
	return m.recorder
}

// GetUserBalance mocks base method.
func (m *MockBalancer) GetUserBalance(ctx context.Context, userID uuid.UUID) (float64, float64, float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserBalance", ctx, userID)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(float64)
	ret2, _ := ret[2].(float64)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// GetUserBalance indicates an expected call of GetUserBalance.
func (mr *MockBalancerMockRecorder) GetUserBalance(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserBalance", reflect.TypeOf((*MockBalancer)(nil).GetUserBalance), ctx, userID)
}
